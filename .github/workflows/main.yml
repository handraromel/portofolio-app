name: CI/CD Pipeline
on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          WHITELISTED_DOMAINS: ${{ secrets.WHITELISTED_DOMAINS }}
          APP_URL: ${{ secrets.APP_URL }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_HOST: ${{ secrets.DB_HOST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_SERVICE: ${{ secrets.EMAIL_SERVICE }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_EDITOR_KEY: ${{ secrets.VITE_EDITOR_KEY }}
        run: |
          docker compose build
          docker compose push

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/opc/portofolio-app/
            git pull origin master

            # Create .env file
            cat << EOF > .env
            WHITELISTED_DOMAINS=${{ secrets.WHITELISTED_DOMAINS }}
            APP_URL=${{ secrets.APP_URL }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            EMAIL=${{ secrets.EMAIL }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }}
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
            VITE_EDITOR_KEY=${{ secrets.VITE_EDITOR_KEY }}
            EOF

            # Pull and start containers
            docker compose pull
            docker compose up -d --build

            # Wait for database to be ready
            echo "Waiting for database to be ready..."
            docker compose exec db sh -c 'while ! mysqladmin ping -h"db" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" --silent; do sleep 1; done'

            # Run migrations
            docker compose exec backend sh -c 'npx sequelize-cli db:migrate'

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/opc/portofolio-app/
            docker compose ps
            docker compose logs --tail=50
